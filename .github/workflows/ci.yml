name: CI - Build and Test

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: ['**']

jobs:
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npx jest --ci --coverage

      - name: Upload backend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results-node-20
          path: backend/coverage/
          retention-days: 30

  build-frontend:
    name: Frontend Build & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npx eslint .
        continue-on-error: true

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 7

  integration-check:
    name: Integration Check
    runs-on: ubuntu-latest
    needs: [test-backend, build-frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: |
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Start backend server
        working-directory: ./backend
        run: |
          npm start &
          echo $! > backend.pid
          sleep 5

      - name: Health check
        run: |
          curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:3001/api/health

      - name: Stop backend server
        if: always()
        working-directory: ./backend
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
            rm backend.pid
          fi

      - name: Integration check passed
        run: echo "✅ All checks passed - Backend and Frontend build successfully"

  status-check:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [test-backend, build-frontend, integration-check]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.test-backend.result }}" == "success" ]] && \
             [[ "${{ needs.build-frontend.result }}" == "success" ]] && \
             [[ "${{ needs.integration-check.result }}" == "success" ]]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ One or more CI checks failed"
            echo "Backend tests: ${{ needs.test-backend.result }}"
            echo "Frontend build: ${{ needs.build-frontend.result }}"
            echo "Integration check: ${{ needs.integration-check.result }}"
            exit 1
          fi
